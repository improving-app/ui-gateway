name: Scala CI

on:
  push:
    branches: [ main, MVP ]
  pull_request:
    branches: [ main, MVP ]
  workflow_dispatch:

jobs:
  check-build-test-publish-deploy:
    name: Check, Build, Test, Publish to gcr.io, Deploy to Kalix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Coursier Caching
        uses: coursier/cache-action@v6

#      - name: Run scalafmt via sbt
#        run: sbt scalafmtSbtCheck scalafmtCheck test:scalafmtCheck

      - name: Use GCP
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Build, Test, Publish with sbt
        run: |
          sbt -v clean test packageBin Docker/publish

      - name: Cleanup Before Caching
        shell: bash
        run: |
          rm -rf "$HOME/.ivy2/local" || true
          find $HOME/Library/Caches/Coursier/v1        -name "ivydata-*.properties" -delete || true
          find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
          find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
          find $HOME/.sbt                              -name "*.lock"               -delete || true

      - name: Kalix Deploy
        env:
          token: ${{ secrets.KALIX_TOKEN }}
          project: ${{ secrets.KALIX_PROJECT_ID }}
        uses: lightbend/kalix-action@v4
        with:
          cmd: "services deploy gateway ${{ secrets.REPO_HOST }}/improving-ui-gateway:latest"

#  slack-workflow-status:
#    if: always()
#    name: Post Workflow Status To Slack
#    needs:
#      - build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Slack Workflow Notification
#        uses: Gamesight/slack-workflow-status@master
#        with:
#          # Required Input
#          repo_token: ${{secrets.API_TOKEN}}
#          slack_webhook_url: ${{secrets.SLACK_WEBHOOK}}
#          # Optional Input
#          channel: '#improving-app-notifications'
#          name: 'GitHub Workflow'
